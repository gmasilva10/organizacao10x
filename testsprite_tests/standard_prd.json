{
  "meta": {
    "project": "Organização10x",
    "date": "2025-09-11",
    "prepared_by": "Generated by Software Development Manager"
  },
  "product_overview": "Organização10x is a comprehensive management platform designed for personal trainers to manage their students' lifecycle from registration through relationship management, onboarding, and financial tracking, ensuring streamlined workflows and premium user experience.",
  "core_goals": [
    "Deliver an end-to-end management solution for personal trainers covering student registration, relationship management, onboarding, and financial tracking.",
    "Implement a sophisticated training directive system with version control and decision engine based on customizable rules and parameters.",
    "Enable advanced CRM features focusing on student relationship management including messaging templates, kanban workflow, and reminder engines with internal notifications.",
    "Ensure high performance with operations under 400ms P95 across core functionalities and enforce robust security with RLS and complete audit logs.",
    "Provide a premium UX/UI experience with accessibility, responsive design, clear navigation, and custom interactive elements like modals and tag selects."
  ],
  "key_features": [
    "Comprehensive authentication system with login, signup, password recovery, and session management via Supabase Auth.",
    "Student management module with full CRUD, attachments, and process tracking.",
    "Training Directives module featuring versioned directives, rule-based decision engine, and detailed catalogs for RIR, protocols, readiness scales, and tags.",
    "Relationship module allowing creation of threaded conversations per student/service, with rich event types including notes, tasks, templates, and reminders.",
    "Kanban system for managing workflows with WIP limits and dynamic badges integrated with relationship threads.",
    "Reminder engine to schedule and trigger internal operational notifications with toast messages and counters.",
    "Premium UI components ensuring zero undue scrolling, accessible interactions with data-testid and ARIA roles, and consistent visual feedback including loaders and toasts.",
    "Robust backend architecture using Supabase with PostgreSQL RLS policies, automatic backups, and audit trails.",
    "Automated end-to-end testing with TestSprite, Puppeteer, Jest, and Vitest assuring quality and regression control."
  ],
  "user_flow_summary": [
    "User logs into the platform and accesses modules based on their role and permissions enforced by RLS.",
    "For training directives, users create, edit, version, publish, and set default directives with input validation and rule conditions applied over student data for automated decision outputs.",
    "Users manage student profiles with attachments and track their onboarding and workflow in a Kanban board.",
    "In the relationship module, users create threads linked to students and optionally services, add diverse event types, apply message templates with live preview, and track progress in a kanban interface respecting WIP constraints.",
    "Reminders are configured by users with rules to internally notify upcoming tasks or follow-ups; the system triggers these events and displays toast notifications without external messaging.",
    "All UI interactions are keyboard accessible with data-testid markers for QA automation, consistent UI feedback, responsive layouts, and accessibility standards.",
    "Performance monitoring and automated testing ensure smooth, reliable operation before deployment."
  ],
  "validation_criteria": [
    "Login, navigation, and module access function without errors with UI loading <2 seconds.",
    "Training Directives workflows allow creating, editing, publishing directives with required validations and accurate application of rules.",
    "Rule creation supports tag-based conditions, operator selection, prioritization, and output parameter configuration without errors.",
    "Catalogs (RIR scale, anthropometric protocols with LaTeX formulas, readiness scales, and tag search) render correctly and validate input.",
    "Relationship threads support full lifecycle with proper event logging: adding notes, creating/closing tasks, and applying templates with preview and commit.",
    "Kanban board enforces WIP limits, supports drag-and-drop column moves, and updates task badges dynamically.",
    "Reminder engine allows rule setup, simulates execution to generate events, and presents success toast notifications.",
    "Accessibility standards met including data-testid usage, ARIA roles, keyboard navigation with proper focus order and visible states.",
    "Performance validated with P95 < 400ms on key interactions substantiated by query timing logs.",
    "Automated test suites run with 100% pass rates across all modules; visual evidence of workflows and performance metrics provided.",
    "Audit logs record all create, update, delete, and state change actions consistently.",
    "UX/UI meets premium standards: responsive layouts with no unwanted scroll, consistent styling, immediate feedback with toasts and loading indicators.",
    "Security enforcement via RLS restricts access properly by organization and role on all data operations."
  ],
  "code_summary": {
    "tech_stack": [
      "TypeScript",
      "Next.js 14",
      "React 18",
      "Tailwind CSS",
      "Shadcn/ui",
      "Supabase",
      "PostgreSQL",
      "Vercel",
      "Lucide React",
      "Sonner",
      "Date-fns",
      "Zod",
      "React Query",
      "Vaul",
      "Radix UI"
    ],
    "features": [
      {
        "name": "Sistema de Autenticação",
        "description": "Sistema completo de autenticação com Supabase Auth, login, cadastro, recuperação de senha e gerenciamento de sessão",
        "files": [
          "web/lib/use-auth-sync.ts",
          "web/app/login/page.tsx",
          "web/app/signup/page.tsx",
          "web/app/login-simple/page.tsx",
          "web/middleware.ts"
        ]
      },
      {
        "name": "Módulo de Alunos",
        "description": "Sistema completo de gerenciamento de alunos com cadastro, edição, listagem, anexos e processos",
        "files": [
          "web/app/app/students/page.tsx",
          "web/app/app/students/[id]/edit/page.tsx",
          "web/components/students/StudentEditTabsV6.tsx",
          "web/components/students/StudentCardActions.tsx",
          "web/components/students/StudentTableActions.tsx",
          "web/components/students/StudentAttachments.tsx",
          "web/components/students/shared/StudentActions.tsx",
          "web/components/students/modals/MatricularModal.tsx",
          "web/components/students/modals/OnboardingModal.tsx",
          "web/app/api/students/route.ts",
          "web/app/api/students/[id]/route.ts",
          "web/hooks/useStudents.ts"
        ]
      },
      {
        "name": "Módulo de Relacionamento",
        "description": "Sistema de relacionamento com alunos incluindo templates, tarefas, Kanban, calendário e timeline",
        "files": [
          "web/app/app/relacionamento/page.tsx",
          "web/components/relationship/RelationshipKanban.tsx",
          "web/components/relationship/RelationshipCalendar.tsx",
          "web/components/relationship/RelationshipTimeline.tsx",
          "web/components/relationship/RelationshipFilters.tsx",
          "web/hooks/useRelationshipFilters.ts",
          "web/lib/relationship/event-registry.ts",
          "web/lib/relationship/template-seeds.ts",
          "web/app/api/relationship/tasks/route.ts",
          "web/app/api/relationship/job/route.ts",
          "web/app/api/relationship/recalculate/route.ts",
          "web/app/api/relationship/occurrence-trigger/route.ts",
          "web/app/api/students/[id]/relationship-logs/route.ts"
        ]
      },
      {
        "name": "Sistema de Ocorrências",
        "description": "Gerenciamento de ocorrências dos alunos com tipos, status, lembretes e anexos",
        "files": [
          "web/app/api/occurrences/route.ts",
          "web/app/api/students/[id]/occurrences/route.ts",
          "web/components/students/StudentOccurrencesListContent.tsx"
        ]
      },
      {
        "name": "Sistema de Kanban",
        "description": "Sistema de Kanban para gerenciamento de fluxo de trabalho e onboarding",
        "files": [
          "web/app/api/kanban/resync/route.ts",
          "web/components/kanban/KanbanBoard.tsx"
        ]
      },
      {
        "name": "Sistema de Performance",
        "description": "Sistema de monitoramento de performance com métricas, lazy loading e otimizações",
        "files": [
          "web/lib/perfClient.ts",
          "web/hooks/usePreload.ts",
          "web/hooks/useIcons.ts",
          "web/components/ui/OptimizedIcon.tsx",
          "web/scripts/performance-baseline.js"
        ]
      },
      {
        "name": "Sistema de Cache e Estado",
        "description": "Gerenciamento de estado global com React Query, cache inteligente e sincronização",
        "files": [
          "web/lib/query-client.ts",
          "web/components/providers/QueryProvider.tsx",
          "web/hooks/useDebounce.ts"
        ]
      },
      {
        "name": "Sistema de UI/UX",
        "description": "Componentes de interface padronizados, modais, toasts e feedback visual",
        "files": [
          "web/components/ui/",
          "web/lib/toast-utils.ts",
          "web/components/AppShell.tsx",
          "web/app/layout.tsx"
        ]
      },
      {
        "name": "Sistema de Banco de Dados",
        "description": "Migrations, RLS, funções e triggers do PostgreSQL via Supabase",
        "files": [
          "supabase/migrations/",
          "web/supabase/migrations/"
        ]
      },
      {
        "name": "Sistema de Testes",
        "description": "Testes automatizados, evidências e documentação de qualidade",
        "files": [
          "web/__tests__/",
          "web/tests/",
          "web/evidencias/",
          "testsprite_tests/"
        ]
      }
    ]
  }
}
