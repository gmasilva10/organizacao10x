[
  {
    "id": "TC001",
    "title": "User Login Success",
    "description": "Verify that a user can log in successfully with valid credentials using the Supabase Auth system.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the login page."
      },
      {
        "type": "action",
        "description": "Input valid username/email and password."
      },
      {
        "type": "action",
        "description": "Click the login button."
      },
      {
        "type": "assertion",
        "description": "Verify that login is successful and user is redirected to the dashboard within 2 seconds."
      }
    ]
  },
  {
    "id": "TC002",
    "title": "User Login Failure with Invalid Credentials",
    "description": "Verify that login fails with incorrect username/email or password and appropriate error message is displayed.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the login page."
      },
      {
        "type": "action",
        "description": "Input invalid username/email or password."
      },
      {
        "type": "action",
        "description": "Click the login button."
      },
      {
        "type": "assertion",
        "description": "Verify that login fails and error message is shown without page crash."
      }
    ]
  },
  {
    "id": "TC003",
    "title": "Password Recovery Workflow",
    "description": "Verify password recovery flow allows user to request password reset and send recovery email.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to password recovery page."
      },
      {
        "type": "action",
        "description": "Input registered email address."
      },
      {
        "type": "action",
        "description": "Submit password recovery request."
      },
      {
        "type": "assertion",
        "description": "Verify confirmation message appears and recovery email is triggered."
      }
    ]
  },
  {
    "id": "TC004",
    "title": "Student CRUD Operations",
    "description": "Verify that users can create, read, update, and delete student records with valid data and UI feedback.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the students module."
      },
      {
        "type": "action",
        "description": "Create a new student with complete required details."
      },
      {
        "type": "assertion",
        "description": "Verify the student appears in the list with correct data."
      },
      {
        "type": "action",
        "description": "Edit the studentâ€™s profile including attachments."
      },
      {
        "type": "assertion",
        "description": "Verify edits are saved and displayed correctly."
      },
      {
        "type": "action",
        "description": "Delete the student record."
      },
      {
        "type": "assertion",
        "description": "Verify student is removed and audit log entry exists for deletion."
      }
    ]
  },
  {
    "id": "TC005",
    "title": "Student Attachments Management",
    "description": "Verify uploading, viewing, and removing attachments in student profiles works correctly with validation.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Open a student profile."
      },
      {
        "type": "action",
        "description": "Upload multiple valid attachments."
      },
      {
        "type": "assertion",
        "description": "Verify attachments appear correctly with preview where applicable."
      },
      {
        "type": "action",
        "description": "Delete an attachment."
      },
      {
        "type": "assertion",
        "description": "Verify attachment removed from profile and audit log records the deletion."
      }
    ]
  },
  {
    "id": "TC006",
    "title": "Create and Manage Training Directives with Version Control",
    "description": "Verify users can create, edit, publish, version, and set default training directives with validations.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to Training Directives module."
      },
      {
        "type": "action",
        "description": "Create a new training directive with valid parameters."
      },
      {
        "type": "assertion",
        "description": "Verify directive is saved and listed."
      },
      {
        "type": "action",
        "description": "Edit the directive and save as new version."
      },
      {
        "type": "assertion",
        "description": "Verify version increment and both versions are accessible."
      },
      {
        "type": "action",
        "description": "Set a directive version as default."
      },
      {
        "type": "assertion",
        "description": "Verify default status updates correctly in UI and backend."
      }
    ]
  },
  {
    "id": "TC007",
    "title": "Training Directive Rule-Based Decision Engine",
    "description": "Verify that rule conditions with tag-based, operator selection, and prioritization apply correctly to student data producing accurate decisions.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Create rule conditions with various tag and parameter settings."
      },
      {
        "type": "action",
        "description": "Apply rules to test student dataset."
      },
      {
        "type": "assertion",
        "description": "Verify that output parameters reflect expected decision results consistently."
      }
    ]
  },
  {
    "id": "TC008",
    "title": "Catalogs Rendering and Validation",
    "description": "Verify that catalogs for RIR scale, anthropometric protocols with LaTeX formulas, readiness scales, and tag search render properly and validate inputs correctly.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to various catalog sections."
      },
      {
        "type": "assertion",
        "description": "Verify correct rendering of LaTeX formulas and proper layout of lists."
      },
      {
        "type": "action",
        "description": "Attempt to input invalid data in catalog-related forms."
      },
      {
        "type": "assertion",
        "description": "Verify validation messages appear and prevent submission."
      }
    ]
  },
  {
    "id": "TC009",
    "title": "Relationship Threads Lifecycle",
    "description": "Verify creation, editing, and deletion of relationship threads linked to students and services including event types: notes, tasks, templates, and reminders.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Create a new relationship thread linked to a student and a service."
      },
      {
        "type": "action",
        "description": "Add diverse event types (note, task, reminder) to the thread."
      },
      {
        "type": "assertion",
        "description": "Verify events display correctly in the thread timeline."
      },
      {
        "type": "action",
        "description": "Apply a message template with live preview and commit it."
      },
      {
        "type": "assertion",
        "description": "Verify template content inserted correctly and saved."
      },
      {
        "type": "action",
        "description": "Close and delete the thread."
      },
      {
        "type": "assertion",
        "description": "Verify proper status change and removal with audit log entry."
      }
    ]
  },
  {
    "id": "TC010",
    "title": "Kanban Board WIP Limits and Drag-and-Drop",
    "description": "Verify Kanban board enforces WIP limits, supports drag-and-drop column movements and dynamically updates task badges.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Open the Kanban board for student workflow management."
      },
      {
        "type": "action",
        "description": "Attempt to move more cards into a column than its WIP limit allows."
      },
      {
        "type": "assertion",
        "description": "Verify movement is blocked or user is warned according to rules."
      },
      {
        "type": "action",
        "description": "Drag and drop cards between columns respecting WIP limits."
      },
      {
        "type": "assertion",
        "description": "Verify badges on tasks update dynamically and move is registered."
      }
    ]
  },
  {
    "id": "TC011",
    "title": "Reminder Engine Rule Setup and Notification Trigger",
    "description": "Verify users can set rules for reminders which trigger internal notifications and display toast messages and counters when executed.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the reminder engine setup."
      },
      {
        "type": "action",
        "description": "Configure reminder rules with valid conditions."
      },
      {
        "type": "action",
        "description": "Simulate or wait for reminder trigger."
      },
      {
        "type": "assertion",
        "description": "Verify toast notifications appear and counters update accordingly without external messaging."
      }
    ]
  },
  {
    "id": "TC012",
    "title": "UI Accessibility and Keyboard Navigation",
    "description": "Verify all UI elements support keyboard navigation, focus order is logical, ARIA roles and data-testid attributes are present for accessibility and automated testing.",
    "category": "ui",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate through the application via keyboard tab and arrow keys."
      },
      {
        "type": "assertion",
        "description": "Verify focus state is clearly visible and order is as expected."
      },
      {
        "type": "assertion",
        "description": "Verify ARIA roles assigned correctly for screen readers."
      },
      {
        "type": "assertion",
        "description": "Verify all interactive elements have data-testid attributes for QA."
      }
    ]
  },
  {
    "id": "TC013",
    "title": "Performance Check on Core Functionalities",
    "description": "Verify that all key operations across modules complete within 400ms P95 response time with no UI lag and loading indicators shown when needed.",
    "category": "performance",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Perform actions like login, student CRUD, training directive publishing, kanban move, and reminder creation."
      },
      {
        "type": "assertion",
        "description": "Measure timing and confirm operations complete under 400ms at 95th percentile."
      },
      {
        "type": "assertion",
        "description": "Verify loading spinners or toasts appear appropriately in UI."
      }
    ]
  },
  {
    "id": "TC014",
    "title": "Security Enforcement via RLS and Audit Logs",
    "description": "Verify Row Level Security correctly restricts data access by roles and organizations and all create, update, delete, and state changes are consistently logged in audit trail.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Log in as users with different roles and organizations."
      },
      {
        "type": "action",
        "description": "Attempt CRUD operations on data outside user's scope."
      },
      {
        "type": "assertion",
        "description": "Verify access is denied as per RLS policies."
      },
      {
        "type": "action",
        "description": "Create, update, and delete records within permissions."
      },
      {
        "type": "assertion",
        "description": "Verify audit logs record all actions accurately and incompletely."
      }
    ]
  },
  {
    "id": "TC015",
    "title": "Automated Testing Suite Execution",
    "description": "Verify that automated test suites (TestSprite, Puppeteer, Jest, Vitest) run without failures covering UI workflows, backend APIs, and performance checks.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Trigger full automated test suite run in CI environment."
      },
      {
        "type": "assertion",
        "description": "Confirm all tests pass with 100% success rates."
      },
      {
        "type": "assertion",
        "description": "Verify test coverage reports and performance metrics match expected thresholds."
      }
    ]
  },
  {
    "id": "TC016",
    "title": "UX/UI Responsiveness and Visual Feedback",
    "description": "Verify that the UI is responsive across device sizes, no unwanted scrolling occurs, and consistent visual feedback such as toasts, loaders, and badges is displayed.",
    "category": "ui",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Resize browser to various viewport widths including mobile and desktop."
      },
      {
        "type": "assertion",
        "description": "Verify layout adjusts responsively with no content overflow or unwanted scroll."
      },
      {
        "type": "action",
        "description": "Perform actions that trigger loaders, toasts, and badge updates."
      },
      {
        "type": "assertion",
        "description": "Verify visual feedback elements appear in a consistent style and disappear appropriately."
      }
    ]
  },
  {
    "id": "TC017",
    "title": "Message Template Application with Live Preview",
    "description": "Verify that applying message templates in relationship threads shows a live preview and commits the correct content.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Open a relationship thread and select a message template."
      },
      {
        "type": "assertion",
        "description": "Verify that live preview renders the template content correctly."
      },
      {
        "type": "action",
        "description": "Commit the template message to the thread."
      },
      {
        "type": "assertion",
        "description": "Verify the message content is saved and displayed in the conversation."
      }
    ]
  }
]
