# Plano de Realinhamento - Módulo de Alunos v0.4.0
## Estrutura de Edição com Tabs Anexos + Processos

**Data:** 2025-01-29  
**Versão:** 0.4.0  
**Status:** Planejamento  

---

## 1. ESTRUTURA DE TABS PRINCIPAIS

### 1.1 Tab: Anexos
- **Responsáveis**
  - Treinador principal (1 obrigatório)
  - Treinador de apoio (0..N)
  - Responsáveis específicos (comercial, anamnese, consultoria técnica)
  - Regras: apenas colaboradores ativos da Equipe
  - Histórico de alterações

- **Ocorrências (Aluno)**
  - Filtro por student_id
  - Colunas: ID, Grupo, Tipo, Data, Responsável, Status
  - Ações: Ver / Editar (não encerrar/cancelar)

- **Anamnese**
  - Básica: formulário padrão
  - Completa: formulário detalhado
  - Visualizar + editar respostas

- **Diretriz de Treino**
  - Exibir informações geradas
  - Exportar PDF
  - Placeholder para integração futura

- **Treino (Futuro)**
  - Espaço reservado para planos

### 1.2 Tab: Processos
- **Gerar Nova Ocorrência**
  - Modal simplificado
  - Vincula automaticamente ao aluno
  - Apenas criar (não encerrar/cancelar)

- **Gerar Anamnese**
  - Link tokenizado para WhatsApp
  - Respostas direto em "Anexos > Anamnese"

- **Gerar Diretriz**
  - Opção 1: link para dados adicionais
  - Opção 2: execução direta do motor
  - Resultado em "Anexos > Diretriz"

---

## 2. FLUXO DE DADOS - RESPONSÁVEIS

### 2.1 Tabela students_responsibles (pivot)
```sql
student_id (FK → students)
user_id (FK → users da equipe)
role (enum: trainer_principal, trainer_support, responsavel_comercial, responsavel_anamnese, etc.)
is_active (boolean) – responsável atual
start_date, end_date – histórico
```

### 2.2 Regras de Negócio
- Responsáveis só podem ser usuários da Equipe
- Campo de seleção busca direto no banco
- Permitir alteração de responsável atual
- Histórico de alterações

---

## 3. CRITÉRIOS DE ACEITE

### 3.1 Estrutura Obrigatória
- [ ] Tabs Anexos e Processos na edição
- [ ] Anexos: responsáveis, ocorrências, anamnese, diretriz, treino
- [ ] Processos: 3 botões (Nova Ocorrência, Gerar Anamnese, Gerar Diretriz)

### 3.2 Funcionalidades
- [ ] Responsáveis vinculados a colaboradores ativos
- [ ] Ocorrências filtradas por student_id
- [ ] Anamnese básica/completa editável
- [ ] Diretriz exportável em PDF
- [ ] Ações de encerrar/cancelar apenas no módulo central

### 3.3 UX Premium
- [ ] Breadcrumb
- [ ] Loading states
- [ ] Toasts de feedback
- [ ] Modais personalizados (não padrão do navegador)

---

## 4. ROADMAP DE IMPLEMENTAÇÃO

### Fase 1: Estrutura Base (1-2 dias)
- [ ] Criar componente StudentEditTabs
- [ ] Implementar tabs Anexos/Processos
- [ ] Estrutura básica de responsáveis

### Fase 2: Responsáveis (2-3 dias)
- [ ] Tabela students_responsibles
- [ ] CRUD de responsáveis
- [ ] Histórico de alterações
- [ ] Validação de colaboradores ativos

### Fase 3: Ocorrências (2-3 dias)
- [ ] Lista de ocorrências do aluno
- [ ] Modal de nova ocorrência
- [ ] Integração com módulo central

### Fase 4: Anamnese (3-4 dias)
- [ ] Estrutura básica/completa
- [ ] Geração de links tokenizados
- [ ] Visualização e edição de respostas

### Fase 5: Diretriz (2-3 dias)
- [ ] Exibição de diretrizes
- [ ] Exportação PDF
- [ ] Integração com motor (futuro)

### Fase 6: UX e Polimento (2-3 dias)
- [ ] Breadcrumb
- [ ] Loading states
- [ ] Toasts
- [ ] Modais premium

---

## 5. DEPENDÊNCIAS

### 5.1 Backend
- [ ] Tabela students_responsibles
- [ ] Endpoints para responsáveis
- [ ] Integração com módulo de ocorrências
- [ ] Sistema de tokens para anamnese

### 5.2 Frontend
- [ ] Componente StudentEditTabs
- [ ] Modais personalizados
- [ ] Sistema de breadcrumb
- [ ] Integração com WhatsApp API

---

## 6. QA E VALIDAÇÃO

### 6.1 Testes Funcionais
- [ ] Criação/edição de responsáveis
- [ ] Geração de ocorrências
- [ ] Links de anamnese funcionais
- [ ] Exportação de diretrizes

### 6.2 Testes de Integração
- [ ] RLS e multi-tenancy
- [ ] Consistência de dados
- [ ] Performance com muitos responsáveis

### 6.3 Testes de UX
- [ ] Navegação entre tabs
- [ ] Responsividade
- [ ] Acessibilidade

---

## 7. NOTAS TÉCNICAS

### 7.1 Considerações de Performance
- Lazy loading das tabs
- Paginação para ocorrências
- Cache de colaboradores ativos

### 7.2 Segurança
- Validação de permissões por tab
- RLS em todas as consultas
- Tokens seguros para anamnese

### 7.3 Manutenibilidade
- Componentes reutilizáveis
- Hooks customizados
- Documentação de APIs

---

**Próximo Passo:** Após finalizar GATE 9.1, iniciar Fase 1 (Estrutura Base)